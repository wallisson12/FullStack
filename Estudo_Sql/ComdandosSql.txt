*Criacao

    -->	Cria um banco de dados
    Create Database "NomeBanco";

    --> Cria uma tabela e ja coloca seus parametros

        create table tbCliente
        (
            CPF varchar(11),  Ex: Se eu colocar 'Null', permite que esse campo pode ser nulo
            Nome varchar(100),
            Endereco1 varchar(150),
            Endereco2 varchar(150),
            Bairro varchar(50),
            Cidade varchar(50),
            Estado varchar(50),
            CEP varchar(8),
            Idade smallint,
            Sexo varchar(1),
            Limite_Credito float,
            Volume_Compra float,
            Primeira_Compra bit(1)
        );

--> Insere dados na tabela em suas colunas
    
    insert into tbProdutos
        (Produto,Nome,Embalagem,Tamanho,Sabor,Preco_Lista)
    values
        ('1040107','Light-350ml-melancia','Lata','350ml','Melancia',4.56);

--> Atualiza um registro de uma tabela
    
    Update tbProdutos set Embalagem = 'Lata', Preco_Lista = 2.46
        where Produto = '544931';

*Apaga

    --> Agapa um registro da tabela
        
        delete from tbProdutos where Produto = '1078680';


    --> Apaga o banco de dados
        
        Drop Database "NomeBanco";

    --> Apaga a tabela
        
        Drop table "NomeTabela";

*Altera

    --> Altera a tabela e adciona uma chave primaria na coluna 'Produto'
        
        alter table tbProdutos add primary key (Produto);

    --> Altera a tabela e adciona uma coluna, especificando nome e tipo
        
        alter table "NomeTabela" add column("NomeColuna" tipo);

*Selecao

    --> Tras todos os registros da tabela 
        
        Select * from "NomeTabela";

    --> Seleciona todos os campos mas limitando a 5 clientes
        
        select * from tbCliente limit 5;

    --> Seleciona todos os campos mas com um ano especifico
        
        select * from tbVendedores where Year(Data_Admissao) = '2016';

    --> Seleciona todos os campos mas com um Mes especifico

        select * from tbVendedores where Month(Data_Admissao) = '2016';

    --> Seleciona todos os campos e verifica se esta de ferias ou foi admitido depois de 2016

        select * from tbVendedores where De_Ferias = "Sim" or Year(Data_Admissao) > '2016';

    --> Seleciona todos os campos e tras o sabor seja "laranja" ou "manga"

        select * from tbProdutos where Sabor in('Laranja','Manga');

    --> Seleciona todo mundo que possua 'Silva no nome'
        ('%Silva', que possua em alguma parte, '%Silva', que possua no final do nome)
            
            select * from tbCliente where Nome like '%Silva%';



**COMANDOS AVANCADOS**

    --> Comandos como, and, not(),or,Where. Sao usados para filtar

    --> Comando 'Distinct', usado para trazer os que sao diferentes 

            select distinct Embalagem, Tamanho from tbProdutos;
            select distinct Bairro from tbCliente where Cidade = 'Rio de janeiro';

    *Ordenando a saida

            --> Comando 'Order By', faz a ordenacao da saida
            --> A palavra 'DESC', inverte o padrao(ASC), para decresente

                    select * from tbProdutos order by Preco_Lista;
                    select * from tbProdutos order by Preco_Lista DESC; 
                    select * from tbProdutos order by Embalagem ASC, Nome DESC;

    * Funcoes (Sum(),Max(),Min(),Avg(),Count())
    *'Group by', vai agrupar a resposta, com os campos repetidos
    * Quando utilizar uma funcao temos que utilizar um alias 'as';

        select Estado, sum(Limite_Credito) as Limite_Total from tbCliente Group BY Estado;
        select Embalagem,Max(Preco_De_Lista) as Maior_Preco from tbProdutos Group BY Embalagem;
        select Embalagem,Count(*) as Contador from tbProdutos Group BY Embalagem;

    * 'Having', Usado no resultado de agregacao, depois do 'group by'

        select Estado, sum(Limite_Credito) as limite from tbCliente
            group by Estado having sum(Limite_Credito) > 900000;

        select EMBALAGEM, MAX(PRECO_DE_LISTA) AS MAIOR_PRECO, MIN(PRECO_DE_LISTA) AS MENOR_PRECO
	        FROM tabela_de_produtos group by EMBALAGEM HAVING SUM(PRECO_DE_LISTA) <= 80;

    * 'CASE'

    select NOME_DO_PRODUTO, PRECO_DE_LISTA,
        CASE 
            WHEN PRECO_DE_LISTA >= 12 THEN 'PRODUTO CARO'
            WHEN PRECO_DE_LISTA >= 7 AND PRECO_DE_LISTA < 12 THEN 'PRODUTO EM CONTA'
            ELSE 'PRODUTO BARATO'
        END AS Status_Preco
    from tabela_de_produtos;


    * Usandos os Joins

        -Inner Join (Tras o centro da relacao entre tabelas)

            select * from tabela_de_vendedores v
                inner join notas_fiscais n
	        on v.MATRICULA = n.MATRICULA;

            select a.MATRICULA, a.Nome, count(*) from 
            tabela_de_vendedores a
            inner join notas_fiscais b
            on a.MATRICULA = b.MATRICULA
            group by a.MATRICULA, a.Nome;

            select year(nf.Data_Venda), Sum(inf.Quantidade * inf.Preco) as Faturamento
                from notas_fiscais nf inner join itens_notas_fiscais inf
                on nf.Numero = inf.Numero
                group by year(nf.Data_Venda);     


        -Right e left join (tras todos de uma tabela e a relacao da outra)

            select distinct c.CPF, c.Nome, nf.CPF from tabela_de_clientes c
              left join notas_fiscais nf 
              on c.CPF = nf.CPF 
              where nf.CPF is null; 

            


              